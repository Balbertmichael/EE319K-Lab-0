


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Albert Bautista (abb2639)
    3 00000000         ; Date Created: 1/15/2017 
    4 00000000         ; Last Modified: 1/25/2017 
    5 00000000         ; Brief description of the program
    6 00000000         ; The objective of this system is to implement a Car doo
                       r signal system
    7 00000000         ; Hardware connections: Inputs are negative logic; outpu
                       t is positive logic
    8 00000000         ;  PF0 is right-door input sensor (1 means door is open,
                        0 means door is closed)
    9 00000000         ;  PF4 is left-door input sensor (1 means door is open, 
                       0 means door is closed)
   10 00000000         ;  PF3 is Safe (Green) LED signal - ON when both doors a
                       re closed, otherwise OFF
   11 00000000         ;  PF1 is Unsafe (Red) LED signal - ON when either (or b
                       oth) doors are open, otherwise OFF
   12 00000000         ; The specific operation of this system 
   13 00000000         ;   Turn Unsafe LED signal ON if any or both doors are o
                       pen, otherwise turn the Safe LED signal ON
   14 00000000         ;   Only one of the two LEDs must be ON at any time.
   15 00000000         ; NOTE: Do not use any conditional branches in your solu
                       tion. 
   16 00000000         ;       We want you to think of the solution in terms of
                        logical and shift operations
   17 00000000         
   18 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   19 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   20 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   21 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   22 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   23 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   24 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   25 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   26 00000000 4002552C 
                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   27 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   28 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R



ARM Macro Assembler    Page 2 


                               EQU              0x400FE608
   29 00000000                 THUMB
   30 00000000                 AREA             DATA, ALIGN=2
   31 00000000         ;global variables go here
   32 00000000                 ALIGN
   33 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   34 00000000                 EXPORT           Start
   35 00000000         Start
   36 00000000         ;Borrowed initialization prompts from Input Output examp
                       le and changed the enable and direction bits
   37 00000000 491E            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
   38 00000002 6808            LDR              R0, [R1]
   39 00000004 F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
   40 00000008 6008            STR              R0, [R1]
   41 0000000A BF00            NOP
   42 0000000C BF00            NOP                          ; allow time for cl
                                                            ock to finish
   43 0000000E 491C            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
   44 00000010 481C            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
   45 00000012 6008            STR              R0, [R1]
   46 00000014 491C            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
   47 00000016 F04F 00FF       MOV              R0, #0xFF   ; 1 means allow acc
                                                            ess
   48 0000001A 6008            STR              R0, [R1]
   49 0000001C 491B            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
   50 0000001E F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
   51 00000022 6008            STR              R0, [R1]
   52 00000024 491A            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
   53 00000026 F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
   54 0000002A 6008            STR              R0, [R1]
   55 0000002C 4919            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
   56 0000002E F04F 000A       MOV              R0,#0x0A    ; PF0 and PF7-4 inp
                                                            ut, PF3-1 output
   57 00000032 6008            STR              R0, [R1]
   58 00000034 4918            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
   59 00000036 F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
   60 0000003A 6008            STR              R0, [R1]
   61 0000003C 4917            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0



ARM Macro Assembler    Page 3 


   62 0000003E F04F 0011       MOV              R0, #0x11   ; enable weak pull-
                                                            up on PF0 and PF4
   63 00000042 6008            STR              R0, [R1]
   64 00000044 4916            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
   65 00000046 F04F 001B       MOV              R0, #0x1B   ; 1 means enable di
                                                            gital I/O
   66 0000004A 6008            STR              R0, [R1]
   67 0000004C 4815            LDR              R0,=GPIO_PORTF_DATA_R ; R0 poin
                                                            ts to DATA_R for Po
                                                            rt F to allow to re
                                                            ad inputs and write
                                                             outputs to the loc
                                                            ation
   68 0000004E         
   69 0000004E         loop
   70 0000004E 6801            LDR              R1,[R0]     ; [DATA_R] -> R1
   71 00000050 F001 0201       AND              R2,R1,#0x01 ; Masks DATA_R bit 
                                                            0 for right door in
                                                            put
   72 00000054 F001 0310       AND              R3,R1,#0x10 ; Masks DATA_R bit 
                                                            4 for left door inp
                                                            ut
   73 00000058 EA4F 02C2       MOV              R2,R2,LSL #3 ; R2 -> DATA_R bit
                                                             0 into the same bi
                                                            t position for comp
                                                            arison
   74 0000005C EA4F 0353       MOV              R3,R3,LSR #1 ; R3 -> DATA_R bit
                                                             4 into the same bi
                                                            t position for comp
                                                            arison
   75 00000060         ;EOR R2,#8    ; NOT R2[3] Negative Logic already impleme
                       nted no need for this
   76 00000060         ;EOR R3,#8    ; NOT R3[3] Negative Logic already impleme
                       nted no need for this
   77 00000060 EA02 0203       AND              R2,R2,R3    ; R2[3] & R3[3] -> 
                                                            R2[3] Compare if bo
                                                            th switches are on 
                                                            for safe LED
   78 00000064 F082 0308       EOR              R3,R2,#8    ; Puts NOT R2[3] ->
                                                             R3[3]
   79 00000068 EA4F 0393       LSR              R3,#2       ; R3[3]-R3[1] Place
                                                            s the complement of
                                                             safe LED into unsa
                                                            fe LED bit position
                                                            
   80 0000006C F001 01F5       AND              R1,#0xF5    ; Clears Bits 1 & 3
                                                             to have empty spac
                                                            es to 
   81 00000070 EA41 0102       ORR              R1,R1,R2    ; Copies New PF_3 S
                                                            afe LED to be put i
                                                            nto system
   82 00000074 EA41 0103       ORR              R1,R1,R3    ; Copies New PF_1 U
                                                            nsafe LED to be put
                                                             into system
   83 00000078 6001            STR              R1,[R0]     ; Stores Outputs ba
                                                            ck into [DATA_R]
   84 0000007A E7E8            B                loop



ARM Macro Assembler    Page 4 


   85 0000007C         
   86 0000007C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   87 0000007C                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              400253FC 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 35 in file main.s
   Uses
      At line 34 in file main.s
Comment: Start used once
loop 0000004E

Symbol: loop
   Definitions
      At line 69 in file main.s
   Uses
      At line 84 in file main.s
Comment: loop used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 20 in file main.s
   Uses
      At line 58 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 25 in file main.s
   Uses
      At line 49 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 24 in file main.s
   Uses
      At line 46 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 18 in file main.s
   Uses
      At line 67 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 22 in file main.s
   Uses
      At line 64 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 19 in file main.s
   Uses
      At line 55 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file main.s
   Uses
      At line 43 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 26 in file main.s
   Uses
      At line 52 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 21 in file main.s
   Uses
      At line 61 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 28 in file main.s
   Uses
      At line 37 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
11 symbols
348 symbols in table
